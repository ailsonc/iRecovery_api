{"version":3,"sources":["webpack:///./src/app/pages/images/image-form/image-form.component.html","webpack:///./src/app/pages/images/image-form/image-form.component.scss","webpack:///./src/app/pages/images/image-form/image-form.component.ts","webpack:///./src/app/pages/images/image-list/image-list.component.html","webpack:///./src/app/pages/images/image-list/image-list.component.scss","webpack:///./src/app/pages/images/image-list/image-list.component.ts","webpack:///./src/app/pages/images/images-routing.module.ts","webpack:///./src/app/pages/images/images.module.ts","webpack:///./src/app/pages/images/models/image.model.ts","webpack:///./src/app/pages/images/service/image.service.ts"],"names":[],"mappings":"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","file":"pages-images-images-module.js","sourcesContent":["module.exports = \"<app-bread-crumb [itens]=\\\"[{text:'Imagens', link:'/images'}, {text:pageTitle} ]\\\"></app-bread-crumb>\\n\\n<app-page-header [page-title]=\\\"pageTitle\\\" button-link=\\\"/images\\\" button-class=\\\"btn-light\\\" button-text=\\\"<< Voltar\\\">\\n</app-page-header>\\n\\n<form [formGroup]=\\\"resourceForm\\\" (ngSubmit)=\\\"submitForm()\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\">\\n      Informações sobre a Imagem\\n    </div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"form-row\\\">\\n        <!-- name -->\\n        <div class=\\\"form-group col-md-6\\\">\\n          <label for=\\\"name\\\">Nome</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" formControlName=\\\"name\\\">\\n          <app-form-field-error [form-control]=\\\"resourceForm.get('name')\\\"></app-form-field-error>\\n        </div>\\n        <!-- description -->\\n        <div class=\\\"form-group col-md-6\\\">\\n          <label for=\\\"description\\\">Descrição</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"description\\\" formControlName=\\\"description\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"form-row\\\">\\n        <!-- systemId -->\\n        <div class=\\\"form-group col-md-6\\\">\\n          <label for=\\\"idsystem\\\">Sistema Operacional</label>\\n          <select name=\\\"idsystem\\\" id=\\\"idsystem\\\" class=\\\"form-control\\\" formControlName=\\\"idsystem\\\">\\n            <option *ngFor=\\\"let system of systems\\\" [value]=\\\"system.id\\\">{{system.name}}</option>\\n          </select>\\n          <app-form-field-error [form-control]=\\\"resourceForm.get('idsystem')\\\"></app-form-field-error>\\n        </div>\\n        <!-- file -->\\n        <div class=\\\"form-group col-md-6\\\" *ngIf=\\\"currentAction == 'new'\\\">\\n          <label for=\\\"profile\\\">Arquivo</label>\\n          <input type=\\\"file\\\" class=\\\"form-control-file\\\" id=\\\"profile\\\" (change)=\\\"onSelectedFile($event)\\\">\\n          <app-form-field-error [form-control]=\\\"resourceForm.get('profile')\\\"></app-form-field-error>\\n        </div>\\n      </div>\\n      <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group col-md-12\\\">\\n          <div *ngIf=\\\"fileUpload.status==='progress'\\\">\\n            <div class=\\\"progress\\\" style=\\\"height: 20px;margin-bottom:20px;\\\">\\n              <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" [style.width.%]=\\\"fileUpload.message\\\" aria-valuenow=\\\"25\\\"\\n                aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\">{{fileUpload.message}}%</div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <button [disabled]=\\\"submittingForm || resourceForm.invalid\\\" type=\\\"submit\\\"\\n        class=\\\"btn btn-primary btn-lg float-right mt-3\\\">Salvar</button>\\n    </div>\\n  </div>\\n</form>\\n<div *ngIf=\\\"fileUpload.status==='error'\\\">\\n  <div [innerHTML]=\\\"fileUpload.message\\\"></div>\\n</div>\\n<div *ngIf=\\\"fileUpload.status==='success'\\\">\\n  <img [src]=\\\"fileUpload.filePath\\\" height=\\\"200px\\\" />\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2ltYWdlcy9pbWFnZS1mb3JtL2ltYWdlLWZvcm0uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, AfterContentChecked } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router} from '@angular/router';\nimport { switchMap } from 'rxjs/operators';\nimport toastr from 'toastr';\nimport { Image } from '../models/image.model';\nimport { ImageService } from '../service/image.service';\nimport { System } from '../../systems/models/system.model';\nimport { SystemService } from '../../systems/service/system.service';\n\n@Component({\n  selector: 'app-image-form',\n  templateUrl: './image-form.component.html',\n  styleUrls: ['./image-form.component.scss']\n})\nexport class ImageFormComponent implements OnInit, AfterContentChecked {\n  currentAction: String;\n  pageTitle: String;\n  image: Image = new Image();\n  systems: Array<System>;\n  resourceForm: FormGroup;\n  submittingForm: boolean = false;\n\n  fileUpload = {status: '', message: '', filePath: ''};\n\n  constructor(private formBuilder: FormBuilder, private route: ActivatedRoute, private router: Router, private imageService: ImageService, private systemService: SystemService) { }\n\n  ngOnInit() {\n    this.setCurrentAction();\n    this.loadImage();\n    this.loadSystems();\n  }\n\n  ngAfterContentChecked(): void {\n    this.setPageTitle();\n  }\n\n  onSelectedFile(event) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.resourceForm.get('profile').setValue(file);\n    }\n  }\n\n  submitForm() {\n    this.submittingForm = true;\n    if (this.currentAction === 'new') {\n      this.createImage();\n    } else {\n      this.updateImage();\n    }\n  }\n\n  // Private Methods\n  private setCurrentAction() {\n    if (this.route.snapshot.url[0].path === 'new') {\n      this.currentAction = 'new';\n      this.newBuildResourceForm();\n    } else {\n      this.currentAction = 'edit';\n      this.editBuildResourceForm();\n    }\n  }\n\n  private newBuildResourceForm() {\n    this.resourceForm = this.formBuilder.group({\n      id: [null],\n      name: [null, [Validators.required, Validators.minLength(2)]],\n      profile: [null, [Validators.required]],\n      description: [null],\n      idsystem: [null, [Validators.required]]\n    });\n  }\n\n  private editBuildResourceForm() {\n    this.resourceForm = this.formBuilder.group({\n      id: [null],\n      name: [null, [Validators.required, Validators.minLength(2)]],\n      description: [null],\n      idsystem: [null, [Validators.required]]\n    });\n  }\n  private loadImage() {\n    if (this.currentAction === 'edit') {\n      this.route.paramMap.pipe(\n        switchMap(params => this.imageService.getById(+params.get('id')))\n      ).subscribe(\n        (image) =>{\n          this.image = image;\n          this.resourceForm.patchValue(image); // binds loader entry data to resourceForm\n      },\n        (error) => {\n          alert('ocorreu um erro no servidor, tente mas tarde.');\n        }\n      );\n    }\n  }\n\n  private setPageTitle() {\n    if (this.currentAction === 'new') {\n      this.pageTitle = 'Cadastrar';\n    } else {\n      const imageName = this.image.name || '';\n      this.pageTitle = 'Editar: ' + imageName;\n    }\n  }\n\n  private loadSystems() {\n    this.systemService.getAll().subscribe(\n      systems => this.systems = systems\n    );\n  }\n\n  private createImage() {\n    const formData = new FormData();\n    formData.append('name', this.resourceForm.get('name').value);\n    formData.append('description', this.resourceForm.get('description').value);\n    formData.append('profile', this.resourceForm.get('profile').value);\n    formData.append('idsystem', this.resourceForm.get('idsystem').value);\n\n    this.imageService.create(formData).subscribe(\n      res => this.actionsForSuccess(res),\n      error => this.actionsForError(error)\n    );\n  }\n\n  private updateImage() {\n    const image: Image = Object.assign(new Image(), this.resourceForm.value);\n    this.imageService.update(image)\n      .subscribe(\n        data => this.actionsForSuccess(data),\n        error => this.actionsForError(error)\n      );\n  }\n\n  private actionsForSuccess(res) {\n    this.fileUpload = res\n    console.log(res);\n    if(res.id) {\n      toastr.success('Solicitação processada com sucesso!');\n      this.submittingForm = false;\n      this.router.navigateByUrl('images', {skipLocationChange: true}).then(\n        () => this.router.navigate(['images', res.id, 'edit'])\n      );\n    }\n  }\n\n  private actionsForError(error) {\n    toastr.error('Ocorreu um erro ao processada sua solicitação');\n    this.submittingForm = false;\n    if (error.status === 422) {\n      // this.serverErrorMessages = JSON.parse(error._body).erros;\n      //this.serverErrorMessages = ['Falha na comunicação com o servidor, Por favor, tente mais tarde.'];\n    } else {\n      //this.serverErrorMessages = ['Falha na comunicação com o servidor, Por favor, tente mais tarde.'];\n    }\n  }\n}\n","module.exports = \"<app-bread-crumb [itens]=\\\"[{text:'Imagens'} ]\\\"></app-bread-crumb>\\r\\n\\r\\n<app-page-header page-title=\\\"Imagens\\\" button-link=\\\"new\\\" button-class=\\\"btn-success\\\" button-text=\\\"Nova Imagem\\\"></app-page-header>\\r\\n\\r\\n<table class=\\\"table table-hover\\\">\\r\\n  <thead>\\r\\n  <tr class=\\\"bg-primary text-light\\\">\\r\\n    <th style=\\\"width: 80%\\\">Imagem</th>\\r\\n    <th class=\\\"text-center\\\" style=\\\"width: 20%\\\">Ações</th>\\r\\n  </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let resource of resources\\\">\\r\\n      <td>\\r\\n        <strong>{{resource.name}}</strong><br>\\r\\n        <small *ngIf=\\\"resource.description\\\">{{resource.description}}</small>\\r\\n      </td>\\r\\n      <td class=\\\"text-center\\\">\\r\\n        <button [routerLink]=\\\"[resource.id, 'edit']\\\" class=\\\"btn btn-outline-info btn-sm mr-2\\\">Editar</button>\\r\\n        <button (click)=\\\"deleteResource(resource)\\\" class=\\\"btn btn-outline-danger btn-sm\\\">Excluir</button>\\r\\n      </td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2ltYWdlcy9pbWFnZS1saXN0L2ltYWdlLWxpc3QuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Image } from '../models/image.model';\r\nimport { ImageService } from '../service/image.service';\r\n\r\n@Component({\r\n  selector: 'app-image-list',\r\n  templateUrl: './image-list.component.html',\r\n  styleUrls: ['./image-list.component.scss']\r\n})\r\nexport class ImageListComponent implements OnInit {\r\n  resources: Image[] = [];\r\n\r\n  constructor(private imageService: ImageService) {}\r\n\r\n  ngOnInit() {\r\n    this.imageService.getAll().subscribe(\r\n      images => this.resources = images.sort((a, b) => b.id - a.id),\r\n      error => alert('Erro ao carregar a lista')\r\n    );\r\n  }\r\n\r\n  deleteResource(resource: Image) {\r\n    const mustDelete = confirm('Deseja excluir esse item');\r\n    if (mustDelete) {\r\n      this.imageService.delete(resource.id).subscribe(\r\n        () => this.resources = this.resources.filter(element => element !== resource),\r\n        () => alert('Erro ao tentar excluir')\r\n      );\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ImageListComponent } from './image-list/image-list.component';\nimport { ImageFormComponent } from './image-form/image-form.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ImageListComponent,\n    data: {\n      title: 'Image List'\n    }\n  },\n  {\n    path: 'new',\n    component: ImageFormComponent,\n    data: {\n      title: 'Images Form New'\n    }\n  },\n  {\n    path: ':id/edit',\n    component: ImageFormComponent,\n    data: {\n      title: 'Images Form Update'\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ImagesRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { ImagesRoutingModule } from './images-routing.module';\nimport { ImageListComponent } from './image-list/image-list.component';\nimport { ImageFormComponent } from './image-form/image-form.component';\n\n@NgModule({\n  declarations: [ImageListComponent,ImageFormComponent],\n  imports: [\n    SharedModule,\n    ImagesRoutingModule\n  ]\n})\nexport class ImagesModule { }\n","import { BaseResourceModel } from '../../../shared/models/base-resource.model';\r\nimport { System } from '../../systems/models/system.model';\r\n\r\nexport class Image extends BaseResourceModel {\r\n  constructor(\r\n    public id?: number,\r\n    public name?: string,\r\n    public description?: string,\r\n    public originalname?: string,\r\n    public filename?: string,\r\n    public filesize?: string,\r\n    public idsystem?: number,\r\n    public system?: System\r\n    \r\n  ) {\r\n    super();\r\n  }\r\n\r\n  static fromJson(jsonData: any): Image {\r\n    return Object.assign(new Image(), jsonData);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpEvent, HttpErrorResponse, HttpEventType} from '@angular/common/http';\r\nimport { Observable,throwError } from 'rxjs';\r\nimport { catchError, map, flatMap } from 'rxjs/operators';\r\nimport { Image } from '../models/image.model';\r\nimport { SystemService } from '../../systems/service/system.service';\r\nimport { System } from '../../systems/models/system.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ImageService {\r\n  \r\n  apiPath = '/api/v1/image';\r\n\r\n  constructor(private http: HttpClient, private systemService: SystemService) { }\r\n\r\n  getAll(): Observable<Image[]> {\r\n    return this.http.get(this.apiPath).pipe(\r\n      catchError(this.handleError),\r\n      map(this.jsonDataToEntries)\r\n    );\r\n  }\r\n\r\n  getById(id: number): Observable<Image> {\r\n    const url = `${this.apiPath}/${id}`;\r\n    return this.http.get(url).pipe(\r\n      catchError(this.handleError),\r\n      map(this.jsonDataToEntry)\r\n    );\r\n  }\r\n\r\n  delete(id: number): Observable<any> {\r\n    const url = `${this.apiPath}/${id}`;\r\n    return this.http.delete(url).pipe(\r\n      catchError(this.handleError),\r\n      map(() => null)\r\n    );\r\n  }\r\n\r\n  create(formData) {\r\n    return this.http.post<any>(`${this.apiPath}`, formData, {\r\n      reportProgress: true,\r\n      observe: 'events'\r\n    }).pipe(\r\n      map(event => this.getEventMessage(event, formData)),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  update(image: Image): Observable<Image> {\r\n    const url = `${this.apiPath}/${image.id}`;\r\n    return this.systemService.getById(image.idsystem).pipe(\r\n      flatMap( system => {\r\n        image.system = system;\r\n        return this.http.put(url, image).pipe(\r\n          catchError(this.handleError),\r\n          map(() => image)\r\n        );\r\n      })\r\n    );\r\n  }\r\n\r\n  private getEventMessage(event: HttpEvent<any>, formData) {\r\n    switch (event.type) {\r\n      case HttpEventType.UploadProgress:\r\n        return this.fileUploadProgress(event);\r\n\t\t    break;\r\n      case HttpEventType.Response:\r\n        return this.apiResponse(event);\r\n        break;  \r\n      default:\r\n        return `File \"${formData.get('profile').name}\" surprising upload event: ${event.type}.`;\r\n    }\r\n  }\r\n\r\n  private fileUploadProgress(event) {\r\n    const percentDone = Math.round(100 * event.loaded / event.total);\r\n    return { status: 'progress', message: percentDone };\r\n  }\r\n\r\n  private apiResponse(event) {\r\n    return event.body;\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse): Observable<any> {\r\n    if (error.error instanceof ErrorEvent) {\r\n      console.error('An error occurred:', error.error.message);\r\n    } else {\r\n      console.error(`Backend returned code ${error.status}, ` + `body was: ${error.error}`);\r\n    }\r\n    return throwError(error);\r\n  }\r\n\r\n  private jsonDataToEntries(jsonData: any[]): Image[] {\r\n    const images: Image[] = [];\r\n    jsonData.forEach(element => {\r\n      const image = Object.assign(new Image(), element);\r\n      images.push(image);\r\n    });\r\n    return images;\r\n  }\r\n\r\n  private jsonDataToEntry(jsonData: any[]): Image {\r\n    return Object.assign(new Image(), jsonData);\r\n  }\r\n\r\n}"],"sourceRoot":""}